#!/usr/bin/python3
from manchester_code import encode

WAKEUP = b'1'*20        #11111111111111111111
PAUSE_SHORT = b'0'*26   #00000000000000000000000000
PAUSE_LONG = b'0'*376   #

# take a string of 1's 0's and convert to a list of bytes (int) for the manchester library
def stage_input(stream:str) -> list: return [int(stream[i:i+8],2) for i in range(0,len(stream),8) if int(stream[i:i+8],2) >= 1]

# take a bit stream as a string and manchester encode it, returned as a bit stream (str)
def encode_message(stream:str) -> str: return ''.join([bin(byte)[2::].zfill(8) for byte in encode(stage_input(stream))])

# take a bytestring and convert it to a string of 1's and 0's
def assemble_message(stream:str) -> str: return ''.join([bin(byte)[2::].zfill(8) for byte in stream])

msg_preamble = b'\xFF' #1 byte, always seems to be \xFF
msg_fobid = b'\xFE\x37\xC3\x8F' #4 bytes, MSB has consistently been \xFE, FOB1=fe.37.c3.8f FOB2=fe.3e.25.ef
msg_cmd = b'\x42\x41\x08' #3 bytes, command code, unlock is 42.41.04, lock is 42.40.44, rstart is 42.48.04, alarm is 42.40.24
msg_rolling = b'\x08\xF7\x41\xFA\x63\x26' #6 bytes, probably a rolling code, always increases over time

message = encode_message(assemble_message(msg_preamble + msg_fobid + msg_cmd + msg_rolling)).encode()

with open('bitstream.bin', 'wb') as io:
    io.write(WAKEUP + PAUSE_SHORT + message + (PAUSE_LONG + message)*3 + PAUSE_SHORT)

"""
20: 11111111111111111111
26: 00000000000000000000000000

224(encoded): 10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010
112(decoded): 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

224(encoded): 10101010101010101010101010101001010110100110101010100101010110101001010110101010011001010101100101100101010101100101010101100101010101011001010110101010011010100110010101010110101010101001100101101001010110100101100101101001
112(decoded): 1111111111111110001101111100001110001111010000100100000100000100000010001111011101000001111110100110001100100110
376: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

stream = tone + pause + message + blank + message + blank + message + blank + message + blank
"""
""""
sometimes there is a message of all ones that appears to reset the rolling code
"""
